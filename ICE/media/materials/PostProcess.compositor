//Radial blur effect
compositor RadialHardBlur
{
    technique
    {
        // Temporary textures
        texture rt0 target_width target_height PF_A8R8G8B8

        target rt0
        {
            // Render output from previous compositor (or original scene)
            input previous
        }

		target_output
        {
            // Start with clear output
            input none
            // Blur vertically
            pass render_quad
            {
                // Renders a fullscreen quad with a material
				material Ogre/Compositor/Radial_Hard_Blur
                input 0 rt0
            }
        }
    }
}

compositor RadialSoftBlur
{
    technique
    {
        // Temporary textures
        texture rt0 target_width target_height PF_A8R8G8B8

        target rt0
        {
            // Render output from previous compositor (or original scene)
            input previous
        }

		target_output
        {
            // Start with clear output
            input none
            // Blur vertically
            pass render_quad
            {
                // Renders a fullscreen quad with a material
				material Ogre/Compositor/Radial_Soft_Blur
                input 0 rt0
            }
        }
    }
}

compositor ToonPostProcess
{
    technique
    {
        // Temporary textures
        texture rt0 target_width target_height PF_A8R8G8B8

        target rt0
        {
            // Render output from previous compositor (or original scene)
            input previous
        }

		target_output
        {
            // Start with clear output
            input none
            // Blur vertically
            pass render_quad
            {
                // Renders a fullscreen quad with a material
				material postProcessToon
                input 0 rt0
            }
        }
    }
}

//DoF effect
compositor DoF_DepthOfField
{
	technique
	{
		// temporary texture (MRT!)
		// 4 sub-surfaces, all 32-bit
		texture mrt0 target_width_scaled 0.5 target_height_scaled 0.5 PF_A8R8G8B8
		texture scene target_width target_height PF_A8R8G8B8
		texture dof_pass1 target_width target_height PF_A8R8G8B8
 
		target scene
		{
		    input previous
		}
 
        target mrt0
        {
            // Render scene using MRT-compatible material scheme
            input none
            material_scheme DepthPass
			pass clear
			{
 
			}
			pass render_scene
			{
			}
        }
 
		target dof_pass1
		{
			input none
            pass render_quad
            {
                // Renders a fullscreen quad
				material dof_blender_1st_pass
				// bind 4 MRT surfaces as texture inputs
                input 0 scene
                input 1 mrt0 0
 
          }
 
		}
 
		target_output
		{
		    input none
 
		    pass render_quad
		    {
		        material dof_blender_2nd_pass
		        input 0 dof_pass1
		        input 1 mrt0 0
		    }
		}
	}
}